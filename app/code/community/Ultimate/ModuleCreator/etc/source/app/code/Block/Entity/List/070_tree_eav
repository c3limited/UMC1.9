        ;
        ${{entities}}->getSelect()->order('{{entityTableAlias}}.position');
        $this->set{{Entities}}(${{entities}});
    }

    /**
     * prepare the layout
     * @access protected
     * @return {{Namespace}}_{{Module}}_Block_{{Entity}}_List
     */
    protected function _prepareLayout() {
        parent::_prepareLayout();
        $this->get{{Entities}}()->addFieldToFilter('level', 1);
        if ($this->_getDisplayMode() == 0) {
            $pager = $this->getLayout()->createBlock('page/html_pager', '{{namespace}}_{{module}}.{{entities}}.html.pager')
                ->setCollection($this->get{{Entities}}());
            $this->setChild('pager', $pager);
            $this->get{{Entities}}()->load();
        }
        return $this;
    }

    /**
     * Get the pager html
     *
     * @access public
     * @return string
     */
    public function getPagerHtml() {
        return $this->getChildHtml('pager');
    }

    /**
     * Get the display mode
     * @access protected
     * @return int
     */
    protected function _getDisplayMode() {
        return Mage::getStoreConfigFlag('{{namespace}}_{{module}}/{{entity}}/tree');
    }

    /**
     * draw {{entityLabel}}
     *
     * @access public
     * @param {{Namespace}}_{{Module}}_Model_{{Entity}}
     * @param int $level
     * @return int
     */
    public function draw{{Entity}}(${{entity}}, $level = 0) {
        $html = '';
        $recursion = $this->getRecursion();
        if ($recursion !== '0' && $level >= $recursion) {
            return '';
        }
        if (!${{entity}}->getStatus()) {
            return '';
        }
        ${{entity}}->setStoreId(Mage::app()->getStore()->getId());
        $children = ${{entity}}->getChildren{{Entities}}()->addAttributeToSelect('*');
        $activeChildren = array();
        if ($recursion == 0 || $level < $recursion-1) {
            foreach ($children as $child) {
                if ($child->getStatus()) {
                    $activeChildren[] = $child;
                }
            }
        }
        $html .= '<li>';
        $html .= {{nameHtml}};
        if (count($activeChildren) > 0) {
            $html .= '<ul>';
            foreach ($children as $child) {
                $html .= $this->draw{{Entity}}($child, $level+1);
            }
            $html .= '</ul>';
        }
        $html .= '</li>';
        return $html;
    }

    /**
     * Get recursion
     *
     * @access public
     * @return int
     */
    public function getRecursion() {
        if (!$this->hasData('recursion')) {
            $this->setData('recursion', Mage::getStoreConfig('{{namespace}}_{{module}}/{{entity}}/recursion'));
        }
        return $this->getData('recursion');
    }
